urgences_gen_passu20 = na.omit(urgences_2020[c(urgences_2020$URG == "GEN"), "PASSU"])
urgences_gen_passu = cbind(urgences_gen_passu17,urgences_gen_passu18,urgences_gen_passu19,urgences_gen_passu20)
annee = 2017:2020
gen_passu = data.frame(annee, colMeans(urgences_gen_passu))
#Représentation graphique
ggplot(gen_passu, aes(x=annee, y=colMeans.urgences_gen_passu.)) +
geom_point(shape=21, color="black", fill="#69b3a2", size=3) +
geom_line(color="grey") +
ylab("nombre de passage") +
ggtitle("Evolution du nombre moyen de passagers en urgences générales par année")
setwd("C:/Users/omars/OneDrive/Bureau/M1_S1_R/Projet_R")
library(stargazer)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
### Working directory
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
urgences_2019=read.csv("URGENCES2_2019.csv",sep = ";")
#Comparaison entre +80ans et -18 ans
attach(urgences_2019)
urgences_gen_80 = urgences_2019[c(URG == "GEN"),"dt80"]
urgences_gen_18 = urgences_2019[c(URG == "GEN"),"dt18"]
if (sum(urgences_gen_8,na.rm=TRUE)>sum(urgences_gen_18,na.rm=TRUE)){
print("Les patients de +80 ans sont plus nombreux aux urgences générales que ceux de -18 ans en 2019")
} else {
print("Les patients de -18 ans sont plus nombreux aux urgences générales que ceux de +80 ans en 2019")
}
urgences_2019=read.csv("URGENCES2_2019.csv",sep = ";")
#Comparaison entre +80ans et -18 ans
attach(urgences_2019)
urgences_gen_80 = urgences_2019[c(URG == "GEN"),"dt80"]
urgences_gen_18 = urgences_2019[c(URG == "GEN"),"dt18"]
if (sum(urgences_gen_80,na.rm=TRUE)>sum(urgences_gen_18,na.rm=TRUE)){
print("Les patients de +80 ans sont plus nombreux aux urgences générales que ceux de -18 ans en 2019")
} else {
print("Les patients de -18 ans sont plus nombreux aux urgences générales que ceux de +80 ans en 2019")
}
#étude unité urgence générale -18ans
urgences_gen_18unit = urgences_2019[c(URG == "GEN"),c("dtHAD18", "dtEXT18", "dtMCO18", "dtLS18")]
somme_unit18 = colSums(na.omit(urgences_gen_18unit))
pie(somme_unit18, labels = c("HAD","EXT","MCO","LS"))
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
#if (is.na(urgences_gen_lit19[ligne]) || is.na(urgences_gen_lit20[ligne])){next}
if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ||
(is.na(urgences_gen_lit19[ligne])) && is.na(urgences_gen_lit20[ligne]==FALSE)){
lit_rajoute <- lit_rajoute + 1}
}
print(lit_rajoute)
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ||
(is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne]==FALSE))){
lit_rajoute <- lit_rajoute + 1}
}
print(lit_rajoute)
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ||
(is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE)){
lit_rajoute <- lit_rajoute + 1}
}
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ||
is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE){
lit_rajoute <- lit_rajoute + 1}
}
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
test=is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE
if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] || test){
lit_rajoute <- lit_rajoute + 1}
}
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
test=is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE
if ((urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne]) || test){
lit_rajoute <- lit_rajoute + 1}
}
is.na(urgences_gen_lit20[ligne])
is.na(urgences_gen_lit19[ligne])
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
#test=is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE
if ((urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne]) ){
lit_rajoute <- lit_rajoute + 1}
}
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
#test=is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE
if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ){
lit_rajoute <- lit_rajoute + 1}
}
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
#test=is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE
if(is.na(urgences_gen_lit19[ligne])){next}
if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ){
lit_rajoute <- lit_rajoute + 1
}
}
print(lit_rajoute)
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
#test=is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE
if(is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE){lit_rajoute<-lit_rajoute+1}
if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ){
lit_rajoute <- lit_rajoute + 1
}
}
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
#test=is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE
if(is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE){next}
if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ){
lit_rajoute <- lit_rajoute + 1
}
}
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
#test=is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE
if(is.na(urgences_gen_lit19[ligne])){lit_rajoute<-lit_rajoute+1}
if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ){
lit_rajoute <- lit_rajoute + 1
}
}
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
#test=is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE
if(is.na(urgences_gen_lit19[ligne])){lit_rajoute<-lit_rajoute+1}
else if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ){
lit_rajoute <- lit_rajoute + 1
}
}
print(lit_rajoute)
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
#test=is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE
if(is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE){lit_rajoute<-lit_rajoute+1}
else if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ){
lit_rajoute <- lit_rajoute + 1
}
}
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
#test=is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])==FALSE
if(is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])){next}
else if(is.na(urgences_gen_lit19[ligne]) && !is.na(urgences_gen_lit20[ligne])){
lit_rajoute <- lit_rajoute + 1
}
else if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] ){
lit_rajoute <- lit_rajoute + 1
}
}
print(lit_rajoute)
urgences_2020 = read.csv("URGENCES2_2019.csv", sep = ";")
urgences_gen_lit19 = urgences_2019[c(urgences_2019$URG == "GEN"),"LIT_UHCD"]
urgences_gen_lit20 = urgences_2020[c(urgences_2020$URG == "GEN"),"LIT_UHCD"]
lit_rajoute = 0
for (ligne in 1:nrow(urgences_2019)) {
test=is.na(urgences_gen_lit19[ligne]) && !is.na(urgences_gen_lit20[ligne])
if(is.na(urgences_gen_lit19[ligne]) && is.na(urgences_gen_lit20[ligne])){next}
#else if(is.na(urgences_gen_lit19[ligne]) && !is.na(urgences_gen_lit20[ligne])){
#  lit_rajoute <- lit_rajoute + 1
#}
else if (urgences_gen_lit19[ligne] < urgences_gen_lit20[ligne] || test ){
lit_rajoute <- lit_rajoute + 1
}
}
print(lit_rajoute)
#importation des autres données
urgences_2017 = read.csv("URGENCES2_2017.csv", sep = ";")
urgences_2018 = read.csv("URGENCES2_2018.csv", sep = ";")
urgences_2021 = read.csv("URGENCES2_2021.csv", sep = ";")
#Extraction du nombre de passagers en urgences par année
urgences_gen_passu17 = na.omit(urgences_2017[c(urgences_2017$URG == "GEN"), "PASSU"])
urgences_gen_passu18 = na.omit(urgences_2018[c(urgences_2018$URG == "GEN"), "PASSU"])
urgences_gen_passu19 = na.omit(urgences_2019[c(urgences_2019$URG == "GEN"), "PASSU"])
urgences_gen_passu20 = na.omit(urgences_2020[c(urgences_2020$URG == "GEN"), "PASSU"])
urgences_gen_passu21 = na.omit(urgences_2021[c(urgences_2021$URG == "GEN"), "PASSU"])
urgences_gen_passu = cbind(urgences_gen_passu17,urgences_gen_passu18,urgences_gen_passu19,urgences_gen_passu20,
urgences_2021)
#importation des autres données
urgences_2017 = read.csv("URGENCES2_2017.csv", sep = ";")
urgences_2018 = read.csv("URGENCES2_2018.csv", sep = ";")
urgences_2021 = read.csv("URGENCES2_2021.csv", sep = ";")
#Extraction du nombre de passagers en urgences par année
urgences_gen_passu17 = na.omit(urgences_2017[c(urgences_2017$URG == "GEN"), "PASSU"])
urgences_gen_passu18 = na.omit(urgences_2018[c(urgences_2018$URG == "GEN"), "PASSU"])
urgences_gen_passu19 = na.omit(urgences_2019[c(urgences_2019$URG == "GEN"), "PASSU"])
urgences_gen_passu20 = na.omit(urgences_2020[c(urgences_2020$URG == "GEN"), "PASSU"])
urgences_gen_passu21 = na.omit(urgences_2021[c(urgences_2021$URG == "GEN"), "PASSU"])
urgences_gen_passu = cbind(urgences_gen_passu17,urgences_gen_passu18,urgences_gen_passu19,urgences_gen_passu20,urgences_2021)
#importation des autres données
urgences_2017 = read.csv("URGENCES2_2017.csv", sep = ";")
urgences_2018 = read.csv("URGENCES2_2018.csv", sep = ";")
urgences_2021 = read.csv("URGENCES2_2021.csv", sep = ";")
#Extraction du nombre de passagers en urgences par année
urgences_gen_passu17 = na.omit(urgences_2017[c(urgences_2017$URG == "GEN"), "PASSU"])
urgences_gen_passu18 = na.omit(urgences_2018[c(urgences_2018$URG == "GEN"), "PASSU"])
urgences_gen_passu19 = na.omit(urgences_2019[c(urgences_2019$URG == "GEN"), "PASSU"])
urgences_gen_passu20 = na.omit(urgences_2020[c(urgences_2020$URG == "GEN"), "PASSU"])
urgences_gen_passu21 = na.omit(urgences_2021[c(urgences_2021$URG == "GEN"), "PASSU"])
urgences_gen_passu = cbind(urgences_gen_passu17,urgences_gen_passu18,urgences_gen_passu19,urgences_gen_passu20,
urgences_gen_passu_2021)
#importation des autres données
urgences_2017 = read.csv("URGENCES2_2017.csv", sep = ";")
urgences_2018 = read.csv("URGENCES2_2018.csv", sep = ";")
urgences_2021 = read.csv("URGENCES2_2021.csv", sep = ";")
#Extraction du nombre de passagers en urgences par année
urgences_gen_passu17 = na.omit(urgences_2017[c(urgences_2017$URG == "GEN"), "PASSU"])
urgences_gen_passu18 = na.omit(urgences_2018[c(urgences_2018$URG == "GEN"), "PASSU"])
urgences_gen_passu19 = na.omit(urgences_2019[c(urgences_2019$URG == "GEN"), "PASSU"])
urgences_gen_passu20 = na.omit(urgences_2020[c(urgences_2020$URG == "GEN"), "PASSU"])
urgences_gen_passu21 = na.omit(urgences_2021[c(urgences_2021$URG == "GEN"), "PASSU"])
urgences_gen_passu = cbind(urgences_gen_passu17,urgences_gen_passu18,urgences_gen_passu19,urgences_gen_passu20,
urgences_gen_passu21)
annee = 2017:2021
gen_passu = data.frame(annee, passu=colMeans(urgences_gen_passu))
#Représentation graphique
ggplot(gen_passu, aes(x=annee, y=passu)) +
geom_point(shape=21, color="black", fill="#69b3a2", size=3) +
geom_line(color="grey") +
ylab("nombre de passage") +
ggtitle("Evolution du nombre moyen de passagers en urgences générales par année")
q20=read.table("Q20_2019.csv",header=TRUE,sep=";")
#View(q20)
summary(q20)
nbre_de_données_manquantes=c()
for (colonne in 6:length(q20[1,])){
somme=0
for (ligne in 1:length(q20[,1])){
if(is.na(q20[ligne,colonne])){
somme=somme+1
}
}
nbre_de_données_manquantes=c(nbre_de_données_manquantes,somme)
}
pourcentage_vide=(nbre_de_données_manquantes/length(q20[,1]))*100
tab_pourcentage=data.frame(variables=variable.names(q20)[6:length(q20[1,])],pourcentage_vide)
View(tab_pourcentage)
q20=read.table("Q20_2019.csv",header=TRUE,sep=";")
#View(q20)
summary(q20)
nbre_de_données_manquantes=c()
for (colonne in 6:ncol(q20)){
somme=0
for (ligne in 1:nrow(q20)){
if(is.na(q20[ligne,colonne])){
somme=somme+1
}
}
nbre_de_données_manquantes=c(nbre_de_données_manquantes,somme)
}
pourcentage_vide=(nbre_de_données_manquantes/length(q20[,1]))*100
tab_pourcentage=data.frame(variables=variable.names(q20)[6:length(q20[1,])],pourcentage_vide)
View(tab_pourcentage)
q20=read.table("Q20_2019.csv",header=TRUE,sep=";")
#View(q20)
summary(q20)
nbre_de_données_manquantes=c()
for (colonne in 6:ncol(q20)){
somme=0
for (ligne in 1:nrow(q20)){
if(is.na(q20[ligne,colonne])){
somme=somme+1
}
}
nbre_de_données_manquantes=c(nbre_de_données_manquantes,somme)
}
tab_pourcentage=data.frame(variables=variable.names(q20)[6:ncol(q20)],
pourcentage_vide=(nbre_de_données_manquantes/nrow(q20))*100)
View(tab_pourcentage)
q20=read.table("Q20_2019.csv",header=TRUE,sep=";")
#View(q20)
summary(q20)
nbre_de_données_manquantes=c()
for (colonne in 6:ncol(q20)){
somme=0
for (ligne in 1:nrow(q20)){
if(is.na(q20[ligne,colonne])){
somme=somme+1
}
}
nbre_de_données_manquantes=c(nbre_de_données_manquantes,somme)
}
tab_pourcentage=data.frame(variables=variable.names(q20)[6:ncol(q20)],
pourcentage_vide=(nbre_de_données_manquantes/nrow(q20))*100)
stargazer(tab_pourcentage)
View(q20)
View(q20)
#View(group_femme_par_spe)
tableau_h_f=data.frame(group_femme_par_spe$EFFSALPLF,group_homme_par_spe$EFFSALPLH)
group_homme_par_spe=aggregate(EFFSALPLH~PERSO,sum,data=q20)
group_femme_par_spe=aggregate(EFFSALPLF~PERSO,sum,data=q20)
#View(group_femme_par_spe)
tableau_h_f=data.frame(group_femme_par_spe$EFFSALPLF,group_homme_par_spe$EFFSALPLH)
tableau_h_f
salarie_temps_plein_par_spe=rowSums(tableau_h_f)
pourcentage_homme=(group_homme_par_spe$EFFSALPLH/salarie_temps_plein_par_spe)*100
tab_pourcentage_homme=data.frame(PERSO=group_homme_par_spe$PERSO,pourcentage_homme)
tab_pourcentage_homme=
tab_pourcentage_homme
prop(tableau_h_f)
prop.table(tableau_h_f)
prop.table(tableau_h_f$group_homme_par_spe.EFFSALPLH, margin = tableau_h_f)
prop.table(tableau_h_f[,1:2])
prop.table(tableau_h_f[,1:2])
prop.table(tableau_h_f[,1])
prop.table(tableau_h_f[1:47,])
prop.table(tableau_h_f[1,])
prop.table(tableau_h_f[1:2,])
tab_pourcentage_homme
group_homme_par_spe=aggregate(EFFSALPLH~PERSO,sum,data=q20)
#View(group_homme_par_spe)
group_femme_par_spe=aggregate(EFFSALPLF~PERSO,sum,data=q20)
#View(group_femme_par_spe)
tableau_h_f=data.frame(group_femme_par_spe$EFFSALPLF,group_homme_par_spe$EFFSALPLH)
salarie_temps_plein_par_spe=rowSums(tableau_h_f)
pourcentage_homme=(group_homme_par_spe$EFFSALPLH/salarie_temps_plein_par_spe)*100
tab_pourcentage_homme=data.frame(PERSO=group_homme_par_spe$PERSO,pourcentage_homme)
tab_pourcentage_homme
desc_perso=read.csv("Desc_Perso.csv",sep=",")
View(desc_perso)
for(spe in group_homme_par_spe$PERSO){
for(specialite in desc_perso$Valeur.Modalité){
if(spe==specialite){
group_homme_par_spe$PERSO[which(group_homme_par_spe$PERSO==spe)]=desc_perso$Label.modalité[which(desc_perso$Valeur.Modalité==specialite)]
tab_pourcentage_homme$PERSO[which(tab_pourcentage_homme$PERSO==spe)]=desc_perso$Label.modalité[which(desc_perso$Valeur.Modalité==specialite)]
}
}
}
group_homme_par_spe
tab_pourcentage_homme
affichage=data.frame(tab_pourcentage_homme$PERSO,comparaison=tab_pourcentage_homme$pourcentage_homme)
for(pourcentage in tab_pourcentage_homme$pourcentage_homme){
if(pourcentage>=52){
affichage$comparaison[which(affichage$comparaison==pourcentage)]="La plus grande"
}else if(pourcentage<=48){
affichage$comparaison[which(affichage$comparaison==pourcentage)]="La plus petite"
}else{affichage$comparaison[which(affichage$comparaison==pourcentage)]="La plus proche de 1/2"}
}
View(affichage)
#affichage=data.frame(tab_pourcentage_homme$PERSO,comparaison=tab_pourcentage_homme$pourcentage_homme)
tab_pourcentage_homme[,max(tab_pourcentage_homme$pourcentage_homme)]
#affichage=data.frame(tab_pourcentage_homme$PERSO,comparaison=tab_pourcentage_homme$pourcentage_homme)
tab_pourcentage_homme[max(tab_pourcentage_homme$pourcentage_homme)]
#affichage=data.frame(tab_pourcentage_homme$PERSO,comparaison=tab_pourcentage_homme$pourcentage_homme)
tab_pourcentage_homme[which(max(tab_pourcentage_homme$pourcentage_homme))]
group_homme_par_spe=aggregate(EFFSALPLH~PERSO,sum,data=q20)
#View(group_homme_par_spe)
group_femme_par_spe=aggregate(EFFSALPLF~PERSO,sum,data=q20)
#View(group_femme_par_spe)
tableau_h_f=data.frame(group_femme_par_spe$EFFSALPLF,group_homme_par_spe$EFFSALPLH)
salarie_temps_plein_par_spe=rowSums(tableau_h_f)
pourcentage_homme=(group_homme_par_spe$EFFSALPLH/salarie_temps_plein_par_spe)*100
tab_pourcentage_homme=data.frame(PERSO=group_homme_par_spe$PERSO,pourcentage_homme)
tab_pourcentage_homme
desc_perso=read.csv("Desc_Perso.csv",sep=",")
View(desc_perso)
for(spe in group_homme_par_spe$PERSO){
for(specialite in desc_perso$Valeur.Modalité){
if(spe==specialite){
group_homme_par_spe$PERSO[which(group_homme_par_spe$PERSO==spe)]=desc_perso$Label.modalité[which(desc_perso$Valeur.Modalité==specialite)]
tab_pourcentage_homme$PERSO[which(tab_pourcentage_homme$PERSO==spe)]=desc_perso$Label.modalité[which(desc_perso$Valeur.Modalité==specialite)]
}
}
}
group_homme_par_spe
tab_pourcentage_homme
#affichage=data.frame(tab_pourcentage_homme$PERSO,comparaison=tab_pourcentage_homme$pourcentage_homme)
max(tab_pourcentage_homme$pourcentage_homme)
for(pourcentage in tab_pourcentage_homme$pourcentage_homme){
if(pourcentage>=52){
affichage$comparaison[which(affichage$comparaison==pourcentage)]="La plus grande"
}else if(pourcentage<=48){
affichage$comparaison[which(affichage$comparaison==pourcentage)]="La plus petite"
}else{affichage$comparaison[which(affichage$comparaison==pourcentage)]="La plus proche de 1/2"}
}
#affichage=
maxi=tab_pourcentage_homme[which(pourcentage==max(tab_pourcentage_homme$pourcentage_homme))]
maxi
maxi=tab_pourcentage_homme[which(pourcentage==max(tab_pourcentage_homme$pourcentage_homme)),]
maxi
for(pourcentage in tab_pourcentage_homme$pourcentage_homme){
maxi=tab_pourcentage_homme[which(pourcentage==max(tab_pourcentage_homme$pourcentage_homme)),]}
maxi
for(pourcentage in tab_pourcentage_homme$pourcentage_homme){
maxi=tab_pourcentage_homme[which(pourcentage==max(tab_pourcentage_homme$pourcentage_homme))]}
maxi
which.max(tab_pourcentage_homme$pourcentage_homme)
which.min(tab_pourcentage_homme$pourcentage_homme)
for(pourcentage in tab_pourcentage_homme$pourcentage_homme){
comparaison=c(comparaison,abs(pourcentage-50))
}
comparaison=c()
for(pourcentage in tab_pourcentage_homme$pourcentage_homme){
comparaison=c(comparaison,abs(pourcentage-50))
}
proche=tab_pourcentage_homme[which.min(comparaison)]
tab_pourcentage_homme=cbind(tab_pourcentage_homme,comparaison)
proche=tab_pourcentage_homme[which.min(comparaison)]
proche=tab_pourcentage_homme[which.min(tab_pourcentage_homme$comparaison)]
tab_pourcentage_homme=cbind(tab_pourcentage_homme,comparaison)
proche=tab_pourcentage_homme[which.min(tab_pourcentage_homme$comparaison)]
maxi=tab_pourcentage_homme[which.max(tab_pourcentage_homme$pourcentage_homme)]
maxi=tab_pourcentage_homme[which.max(tab_pourcentage_homme$pourcentage_homme)]
maxi=tab_pourcentage_homme[which.max(tab_pourcentage_homme$pourcentage_homme),]
mini=tab_pourcentage_homme[which.min(tab_pourcentage_homme$pourcentage_homme),]
for(pourcentage in tab_pourcentage_homme$pourcentage_homme){
comparaison=c(comparaison,abs(pourcentage-50))
}
tab_pourcentage_homme=cbind(tab_pourcentage_homme,comparaison)
proche=tab_pourcentage_homme[which.min(tab_pourcentage_homme$comparaison),]
prochr
proche
tab_pourcentage_homme=cbind(tab_pourcentage_homme,comparaison)
proche=tab_pourcentage_homme[which.min(tab_pourcentage_homme$comparaison),]
proche
View(tab_pourcentage)
etp_pu=aggregate(ETP_PU~PERSO,sum,data=q20)
for(spe in etp_pu$PERSO){
for(specialite in desc_perso$Valeur.Modalité){
if(spe==specialite){
etp_pu$PERSO[which(etp_pu$PERSO==spe)]=desc_perso$Label.modalité[which(desc_perso$Valeur.Modalité==specialite)]
}
}
}
View(etp_pu)
etp_pu_ordonne=etp_pu[order(etp_pu$ETP_PU,decreasing = F),]
etp_pu_ordonne
etp_pu=aggregate(ETP_PU~PERSO,sum,data=q20)
for(spe in etp_pu$PERSO){
for(specialite in desc_perso$Valeur.Modalité){
if(spe==specialite){
etp_pu$PERSO[which(etp_pu$PERSO==spe)]=desc_perso$Label.modalité[which(desc_perso$Valeur.Modalité==specialite)]
}
}
}
etp_pu
etp_pu_ordonne=etp_pu[order(etp_pu$ETP_PU,decreasing = F),]
etp_pu_ordonne[1:10,]
barplot(etp_pu_ordonne[1:5,1],etp_pu_ordonne[1:5,2])
etp_pu=aggregate(ETP_PU~PERSO,sum,data=q20)
for(spe in etp_pu$PERSO){
for(specialite in desc_perso$Valeur.Modalité){
if(spe==specialite){
etp_pu$PERSO[which(etp_pu$PERSO==spe)]=desc_perso$Label.modalité[which(desc_perso$Valeur.Modalité==specialite)]
}
}
}
etp_pu
etp_pu_ordonne=etp_pu[order(etp_pu$ETP_PU,decreasing = F),]
etp_pu_ordonne[1:10,]
barplot(etp_pu_ordonne[1:5,])
barplot(etp_pu_ordonne[1:5])
barplot(etp_pu_ordonne[1:5,1])
barplot(data = etp_pu_ordonne[1:5,1])
barplot(data = etp_pu_ordonne[1:5,1], height =20 )
barplot(data = etp_pu_ordonne[1:5,], height =20 )
barplot(height = etp_pu_ordonne[1:5,1] )
barplot(height = etp_pu_ordonne[1:5,2] )
barplot(height = etp_pu_ordonne[1:5,2],xlab=etp_pu_ordonne[1:5,1])
barplot(height = etp_pu_ordonne[1:5,2],labels=etp_pu_ordonne[1:5,1])
barplot(height = etp_pu_ordonne[1:5,2],axisnames=etp_pu_ordonne[1:5,1])
barplot(height = etp_pu_ordonne[1:5,2],axisnames=TRUE,names.arg = etp_pu_ordonne[1:5,1])
