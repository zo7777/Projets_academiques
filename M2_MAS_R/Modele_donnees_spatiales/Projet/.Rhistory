library(readxl)
library(spatialreg)
data <- read_excel("C:/Users/monke/Bureau/M2_MAS_R/Modele_donnees_spatiales/Projet/Database.xlsx",sheet = 'Data_treated')
head(data)
colnames(data)
data <- read_excel("C:/Users/monke/Bureau/M2_MAS_R/Modele_donnees_spatiales/Projet/Database.xlsx",sheet = 'Data_treated')
head(data)
colnames(data)
data$Electricity_production <- na.fill(data$Electricity_production,0)
data$Agricultural_land <- na.fill(data$Agricultural_land,20)
data$Access_to_electricity <- na.locf(data$Access_to_electricity)
data$Armed_forces_personnel <- na.locf(data$Armed_forces_personnel)
data[["Alternative_and_nuclear_energy"]] <- na.fill(data[["Alternative_and_nuclear_energy"]],0)
data <- data[which( !(is.na(data$GDP_per_capita)) ),]
data$High_technology_exports <- na.fill(data$High_technology_exports,0)
data$Research_and_development_expenditure <- fill(data$Research_and_development_expenditure,0)
data$Electricity_production <- na.fill(data$Electricity_production,0)
data$Agricultural_land <- na.fill(data$Agricultural_land,20)
data$Access_to_electricity <- na.locf(data$Access_to_electricity)
data$Armed_forces_personnel <- na.locf(data$Armed_forces_personnel)
data[["Alternative_and_nuclear_energy"]] <- na.fill(data[["Alternative_and_nuclear_energy"]],0)
data <- data[which( !(is.na(data$GDP_per_capita)) ),]
data$High_technology_exports <- na.fill(data$High_technology_exports,0)
data$Research_and_development_expenditure <- na.fill(data$Research_and_development_expenditure,0)
data[["Trade"]] <- na.locf(data[["Trade"]])
# Importation de la carte
data("World")
#World
World <- st_as_sf(World)
data_spatiale <- merge(World, data, by.x="iso_a3",by.y="Country_Code")
head(data_spatiale)
summary(data)
st(data)
ggplot() +
geom_sf(data = data_spatiale, aes(fill = Adolescents_out_of_school)) +
scale_fill_gradient(name = "% Adolescents non scolarises", low = "lightblue", high = "darkred") +
theme_minimal() +
labs(title = "Taux d'adolescent non scolarises dans le monde (2016)")
ggplot() +
geom_sf(data = data_spatiale, aes(fill = Electricity_production)) +
scale_fill_gradient(name = "% Electricite produite", low = "lightblue", high = "darkred") +
theme_minimal() +
labs(title = "Taux d'adolescent non scolarises dans le monde (2016)")
ncol(data)
# Corrélogramme
library(GGally)
ggcorr(data[4:19=6], method = c("everything", "pearson"),high = "#F21A00",mid = "#EEEEEE",low = "#3B9AB2", hjust=0.8, nbreaks = 8, label = TRUE, label_round = 1)
# Corrélogramme
library(GGally)
ggcorr(data[4:16], method = c("everything", "pearson"),high = "#F21A00",mid = "#EEEEEE",low = "#3B9AB2", hjust=0.8, nbreaks = 8, label = TRUE, label_round = 1)
tm_shape(data_spatiale)+tm_polygons(col="white", border.col = "grey25")+
tm_layout(frame = FALSE,bg.color="white")+
tm_shape(st_centroid(data_spatiale))+tm_dots(size =0.2,col="red")+
tm_layout(title ="Centroids",title.position = c('left', 'top'))
coord <-st_centroid(st_geometry(data_spatiale))
data_spatiale.nb <- poly2nb(data_spatiale,queen = TRUE)
summary(data_spatiale.nb)
cardinality <- card(data_spatiale.nb)
isolated_features <- which(cardinality == 0)
isolated_regions <- rownames(data_spatiale)[isolated_features]
data_spatiale <- data_spatiale[!(rownames(data_spatiale) %in% isolated_regions), ]
coord <-st_centroid(st_geometry(data_spatiale))
data_spatiale.nb <- poly2nb(data_spatiale,queen=T)
tmap_mode("plot")
tm_shape(World)+tm_polygons(col="white", border.col = "grey25")+
tm_graticules(lines = FALSE)+
tm_shape(st_centroid(World))+tm_dots(size = .4,col="red")+
tm_shape(nb2lines(data_spatiale.nb, coords=coord))+tm_lines(col="black", lwd=0.3)+
tm_layout(title ="Voisins contigus (Queen)",title.position = c('left', 'top'),scale=0.5)
cont.w <-nb2listw(data_spatiale.nb,style="W",zero.policy = T)
summary(cont.w)
mapPPV2.knn<-knearneigh(coord,k=5)
head(mapPPV2.knn$nn)
mapPPV2.nb<- knn2nb(mapPPV2.knn)
PPV2.w<-nb2listw(mapPPV2.nb,style="W",zero.policy = T)
nb1 <- knn2nb(knearneigh(coord, k = 1))
dsts <- unlist(nbdists(nb1, coord))
nb500km <- dnearneigh(x = st_centroid(data_spatiale), d1 = 0, d2 = 500)
nb500km
dists <- nbdists(nb500km, coord)
ids <- lapply(dists, function(x){1/x})
nb500km.ids.w <- nb2listw(nb500km, glist = ids, style = "W",zero.policy = T)
ids2 <- lapply(dists, function(x){1/(x*x)})
nb500km.ids2.w <- nb2listw(nb500km, glist = ids2, style = "W",zero.policy = T)
x_prod_elec <- cbind(data_spatiale$Electricity_production)
wx_prod_elec <- lag.listw(cont.w,x_prod_elec) #spatial lag
par(mfrow=c(1,2),cex.main=0.7)
boxplot.matrix(x_prod_elec,main="Taux de prod_elecs")
boxplot.matrix(wx_prod_elec,main="Taux de prod_elecs SP")
lm_moran <- lm(wx_prod_elec~x_prod_elec)
summary(lm_moran)
morantest_prod_elecs_cont <- moran.test(data_spatiale$Adolescents_out_of_school,cont.w,randomisation=FALSE,alternative="greater")
morantest_prod_elecs_cont <- moran.test(data_spatiale$Electricity_production,cont.w,randomisation=FALSE,alternative="greater")
morantest_prod_elecs_cont
moran.plot(x=data_spatiale$Electricity_production,cont.w,xlab="Taux d'adolescents non scolarises en 2016",ylab="spatial lag du taux d'adolescents non scolarises",labels=as.character(data_spatiale$iso_a3))
morantest_prod_elecs_cont_cm <-moran.mc(data_spatiale$Electricity_production,cont.w,99,alternative="greater")
morantest_prod_elecs_cont_cm
locm <-localmoran(data_spatiale$Electricity_production, cont.w)
head(locm)
summary(locm)
data_spatiale$Electricity_prod_centree <- data_spatiale$Electricity_production-mean(data_spatiale$Electricity_production)
locmc <-localmoran(data_spatiale$Electricity_prod_centree, cont.w)
head(locmc)
summary(locmc)
moran.carte <- cbind(data_spatiale, locmc)
tm_shape(moran.carte) +
tm_fill(col = "Ii",
style = "quantile",
title = "Indice local de Moran sur donnees centrees")
quadrant <- vector(mode="numeric",length=nrow(locm))
var<- data_spatiale$Electricity_prod_centree
local<-locm[,1]-mean(locm[,1])
signif <- 0.1
quadrant[var>0 & local>0] <- 4
quadrant[var <0 & local<0] <- 1
quadrant[var <0 & local>0] <- 2
quadrant[var >0 & local<0] <- 3
quadrant[locm[,5]>signif] <- 0
table(quadrant)
brks <- c(0,1,2,3,4)
colors <- c("white","blue",rgb(0,0,1,alpha=0.4),rgb(1,0,0,alpha=0.4),"red")
plot(st_geometry(data_spatiale),border="lightgray",col=colors[findInterval(quadrant,brks,all.inside=FALSE)])
box()
legend("bottomleft", legend = c("insignificant","low-low","low-high","high-low","high-high"),
fill=colors,bty="n")
data_spatiale$life_exp <- na.locf(data_spatiale$life_exp)
data_spatiale$life_exp
length(data_spatiale$life_exp)
data_spatiale$life_exp <- na.locf(data_spatiale$life_exp)
length((data_spatiale$Electricity_prod_centree))
na.locf(data_spatiale$life_exp)
length(na.locf(data_spatiale$life_exp))
length(na.spline(data_spatiale$life_exp))
data_spatiale$life_exp <- na.spline(data_spatiale$life_exp)
colnames(data)
equation <- Electricity_production ~ life_exp + Access_to_electricity + Adolescent_fertility_rate + Mortality_rate_under_5 + Agricultural_land + Alternative_and_nuclear_energy + Armed_forces_personnel + CO2_emissions + GDP_per_capita + High_technology_exports + Population_15_64 + Population_density + Research_and_development_expenditure + Trade
prod_elecs_OLS <- lm(equation, data = data_spatiale)
equation <- Electricity_production ~ life_exp + Access_to_electricity + Adolescent_fertility_rate + Agricultural_land + Alternative_and_nuclear_energy + Armed_forces_personnel + CO2_emissions + GDP_per_capita + High_technology_exports + Population_15_64 + Population_density + Research_and_development_expenditure + Trade
prod_elecs_OLS <- lm(equation, data = data_spatiale)
data_spatiale$ols_res<-resid(prod_elecs_OLS)
summary(prod_elecs_OLS)
equation <- Electricity_production ~ life_exp + Access_to_electricity + Adolescent_fertility_rate + Agricultural_land + Alternative_and_nuclear_energy + Armed_forces_personnel + CO2_emissions + GDP_per_capita + High_technology_exports + Population_15_64 + Population_density + Research_and_development_expenditure + Trade - 1
prod_elecs_OLS <- lm(equation, data = data_spatiale)
data_spatiale$ols_res<-resid(prod_elecs_OLS)
summary(prod_elecs_OLS)
equation <- Electricity_production ~ life_exp + Access_to_electricity + Adolescent_fertility_rate + Agricultural_land + Alternative_and_nuclear_energy + Armed_forces_personnel + CO2_emissions + GDP_per_capita + High_technology_exports + Population_15_64 + Population_density + Research_and_development_expenditure + Trade
prod_elecs_OLS <- lm(equation, data = data_spatiale)
data_spatiale$ols_res<-resid(prod_elecs_OLS)
summary(prod_elecs_OLS)
equation <- Electricity_production ~ life_exp + Access_to_electricity + Adolescent_fertility_rate + Agricultural_land + Alternative_and_nuclear_energy + Armed_forces_personnel + CO2_emissions + GDP_per_capita + High_technology_exports + Population_15_64 + Population_density + Research_and_development_expenditure + Trade - 1
prod_elecs_OLS <- lm(equation, data = data_spatiale)
data_spatiale$ols_res<-resid(prod_elecs_OLS)
summary(prod_elecs_OLS)
equation <- Electricity_production ~ life_exp + Agricultural_land + Alternative_and_nuclear_energy + Armed_forces_personnel + CO2_emissions + GDP_per_capita + Population_density + Research_and_development_expenditure - 1
prod_elecs_OLS <- lm(equation, data = data_spatiale)
data_spatiale$ols_res<-resid(prod_elecs_OLS)
summary(prod_elecs_OLS)
equation <- Electricity_production ~ life_exp + Agricultural_land + Alternative_and_nuclear_energy + Armed_forces_personnel + CO2_emissions + GDP_per_capita + Population_density + Research_and_development_expenditure
prod_elecs_OLS <- lm(equation, data = data_spatiale)
data_spatiale$ols_res<-resid(prod_elecs_OLS)
summary(prod_elecs_OLS)
equation <- Electricity_production ~ life_exp + Agricultural_land + Alternative_and_nuclear_energy + Armed_forces_personnel + CO2_emissions + GDP_per_capita + Population_density + Research_and_development_expenditure - 1
prod_elecs_OLS <- lm(equation, data = data_spatiale)
data_spatiale$ols_res<-resid(prod_elecs_OLS)
summary(prod_elecs_OLS)
data_spatiale$W_life_exp <- lag.listw(cont.w, data_spatiale$life_exp)
data_spatiale$W_Agricultural_land <- lag.listw(cont.w, data_spatiale$Agricultural_land)
data_spatiale$W_Alternative_and_nuclear_energy <- lag.listw(cont.w, data_spatiale$Alternative_and_nuclear_energy)
data_spatiale$W_Armed_forces_personnel <- lag.listw(cont.w, data_spatiale$Armed_forces_personnel)
data_spatiale$W_CO2_emissions <- lag.listw(cont.w, data_spatiale$CO2_emissions)
data_spatiale$W_GDP_per_capita <- lag.listw(cont.w, data_spatiale$GDP_per_capita)
data_spatiale$W_Population_density <- lag.listw(cont.w, data_spatiale$Population_density)
data_spatiale$W_Research_and_development_expenditure <- lag.listw(cont.w, data_spatiale$Research_and_development_expenditure)
prod_elecs_SLX = lm(Electricity_production~ life_exp+W_life_exp+Agricultural_land+W_Agricultural_land+Alternative_and_nuclear_energy+W_Alternative_and_nuclear_energy+Armed_forces_personnel+W_Armed_forces_personnel+CO2_emissions+W_CO2_emissions+Population_density+W_Population_density+Research_and_development_expenditure+W_Research_and_development_expenditure,
data=data_spatiale)
data_spatiale$slx_res<-resid(prod_elecs_SLX)
summary(prod_elecs_SLX)
library(spatialreg)
prod_elecs_SAR <- lagsarlm(formula = equation, listw = cont.w, data = data_spatiale)
data_spatiale$sar_res<-resid(prod_elecs_SAR)
summary(prod_elecs_SAR)
prod_elecs_SEM = errorsarlm(formula = equation, listw=cont.w,  data=data_spatiale)
data_spatiale$sem_res <- resid(prod_elecs_SEM)
summary(prod_elecs_SEM)
prod_elecs_SDM <- lagsarlm(formula = equation, listw = cont.w, type = "mixed", data = data_spatiale)
data_spatiale$sdm_res <- resid(prod_elecs_SDM)
summary(prod_elecs_SDM)
data_spatiale$sdm_res<-resid(prod_elecs_SDM)
#Maps
tm_shape(data_spatiale) +tm_text(text = "iso_a3",size=0.4)+
tm_polygons("sdm_res", alpha=0.5,palette="-RdYlBu",
style="pretty", id="POLYID",
title="Residus SDM")
data_spatiale %>%
st_drop_geometry() %>%
pivot_longer(cols = c('slx_res','sar_res','sem_res','sdm_res'), names_to = "Model") %>%
ggplot() +
geom_density(mapping = aes(x = value,
color = Model, fill = Model),
size = 0.5) +
geom_density(mapping = aes(x = ols_res),
color = "gray20", size = 0.5) +
scale_fill_manual(values = alpha(brewer.pal(n = 4, name = "Dark2"), 0.8)) +
scale_color_manual(values = alpha(brewer.pal(n = 4, name = "Dark2"), 1)) +
guides(color = "none", fill = "none") +
labs(x = "Residus", y = "Densite",
title = "Densite des residus SAR, SDM, SEM et SLX",
subtitle = "Distribution des residus MCO") +
facet_wrap(~ Model, nrow = 1)
sdm_vs_sar <- LR.Sarlm(prod_elecs_SDM,prod_elecs_SAR)
sdm_vs_sar
sar_vs_ols <- LR.Sarlm(prod_elecs_SAR,prod_elecs_OLS)
sar_vs_ols
sdm_vs_slx <- LR.Sarlm(prod_elecs_SDM, prod_elecs_SLX)
sdm_vs_slx
slx_vs_ols<-LR.Sarlm(prod_elecs_SLX,prod_elecs_OLS)
slx_vs_ols
sdm_vs_sem <-LR.Sarlm(prod_elecs_SDM,prod_elecs_SEM)
sdm_vs_sem
sem_vs_ols<-LR.Sarlm(prod_elecs_SEM,prod_elecs_OLS)
sem_vs_ols
AICs<-c(AIC(prod_elecs_OLS),AIC(prod_elecs_SLX),AIC(prod_elecs_SAR), AIC(prod_elecs_SEM), AIC(prod_elecs_SDM))
plot(AICs, type="h", lwd=1.5, xaxt="n", xlab="")
axis(1, at=1:5,labels=F) #5= number of models
labels<-c("OLS", "SLX","SAR", "SEM","SDM")
text(1:5, par("usr")[3]-.25, srt=45, adj=1, labels=labels, xpd=T)
mtext(side=1, text="Model Specification", line=3)
symbols(x= which.min(AICs), y=AICs[which.min(AICs)],inches = FALSE, circles=0.2, fg=2,lwd=2,add=T)
BICs<-c(BIC(prod_elecs_OLS),BIC(prod_elecs_SLX),BIC(prod_elecs_SAR), BIC(prod_elecs_SEM), BIC(prod_elecs_SDM))
plot(BICs, type="h", lwd=1.5, xaxt="n", xlab="")
axis(1, at=1:5,labels=F) #5= number of models
labels<-c("OLS", "SLX","SAR", "SEM","SDM")
text(1:5, par("usr")[3]-.25, srt=45, adj=1, labels=labels, xpd=T)
mtext(side=1, text="Model Specification", line=3)
symbols(x= which.min(BICs), y=BICs[which.min(BICs)],inches = FALSE, circles=0.2, fg=2,lwd=2,add=T)
lm.LMtests(prod_elecs_OLS,listw = cont.w,test="LMerr")
lm.LMtests(prod_elecs_OLS,listw = cont.w,test="LMlag")
lm.LMtests(prod_elecs_OLS,listw = cont.w,test="RLMlag")
sdm_vs_sar<-LR.Sarlm(prod_elecs_SDM,prod_elecs_SAR)
sdm_vs_sar
colnames(data)
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(comment = "")
knitr::opts_chunk$set(warning = F)
library(openxlsx)
library(tidyverse)
library(sf)
library(magrittr)
library(RColorBrewer)
library(hrbrthemes)
library(vtable)
library(spdep)
library(tmap)
library(stringr)
library(viridis)
library(lattice)
library(raster)
library(orcutt)
library(cowplot)
library(corrgram)
library(corrplot)
library(stargazer)
library(MASS)
library(ISLR)
library(pls)
library(caret)
library(glmnet)
library(rAmCharts)
library(car)
library(AER)
library(readxl)
library(spatialreg)
data <- read_excel("C:/Users/monke/Bureau/M2_MAS_R/Modele_donnees_spatiales/Projet/Database.xlsx",sheet = 'Data_treated')
head(data)
colnames(data)
data$Electricity_production <- na.fill(data$Electricity_production,0)
data$Agricultural_land <- na.fill(data$Agricultural_land,20)
data$Access_to_electricity <- na.locf(data$Access_to_electricity)
data$Armed_forces_personnel <- na.locf(data$Armed_forces_personnel)
data[["Alternative_and_nuclear_energy"]] <- na.fill(data[["Alternative_and_nuclear_energy"]],0)
data <- data[which( !(is.na(data$GDP_per_capita)) ),]
data$High_technology_exports <- na.fill(data$High_technology_exports,0)
data$Research_and_development_expenditure <- na.fill(data$Research_and_development_expenditure,0)
data[["Trade"]] <- na.locf(data[["Trade"]])
# Importation de la carte
data("World")
#World
World <- st_as_sf(World)
data_spatiale <- merge(World, data, by.x="iso_a3",by.y="Country_Code")
head(data_spatiale)
st(data)
ggplot() +
geom_sf(data = data_spatiale, aes(fill = Electricity_production)) +
scale_fill_gradient(name = "% Electricite produite", low = "lightblue", high = "darkred") +
theme_minimal() +
labs(title = "Taux d'adolescent non scolarises dans le monde (2016)")
par(mfrow=c(1,3),cex.main=0.7)
boxplot(data$Electricity_production,  main ="Prod Elec" ,col = c( "blue") )
boxplot(data$Access_to_electricity, main ="Acces elec" ,col = c( "blue") )
boxplot(prod_elecs$Alternative_and_nuclear_energy,main ="Nuke nrj" ,col = c( "blue") )
par(mfrow=c(1,3),cex.main=0.7)
boxplot(data$Electricity_production,  main ="Prod Elec" ,col = c( "blue") )
boxplot(data$Access_to_electricity, main ="Acces elec" ,col = c( "blue") )
boxplot(data$Alternative_and_nuclear_energy,main ="Nuke nrj" ,col = c( "blue") )
par(mfrow=c(1,3),cex.main=0.7)
boxplot(data$Population_density,  main ="Densite de la pop" ,col = c( "blue") )
boxplot(data$Population_15_64, main ="% de la pop active" ,col = c( "blue") )
boxplot(data$Adolescent_fertility_rate,main ="Taux de fertilite (/1000)" ,col = c( "blue") )
par(mfrow=c(1,4),cex.main=0.7)
boxplot(data$CO2_emissions,  main ="Emissions de CO2" ,col = c( "blue") )
boxplot(data$GDP_per_capita, main ="PIB/hbts" ,col = c( "blue") )
boxplot(data$Armed_forces_personnel,main ="Armee" ,col = c( "blue"))
boxplot(data$High_technology_exports,main ="Export tech" ,col = c( "blue"))
boxplot(data$Research_and_development_expenditure,main ="Recherche et Dev" ,col = c( "blue"))
boxplot(data$Trade,main ="Echange" ,col = c( "blue"))
# Corrélogramme
library(GGally)
ggcorr(data[4:16], method = c("everything", "pearson"),high = "#F21A00",mid = "#EEEEEE",low = "#3B9AB2", hjust=0.8, nbreaks = 8, label = TRUE, label_round = 1)
## Filtrer les variables essentielles
tm_shape(data_spatiale)+tm_polygons(col="white", border.col = "grey25")+
tm_layout(frame = FALSE,bg.color="white")+
tm_shape(st_centroid(data_spatiale))+tm_dots(size =0.2,col="red")+
tm_layout(title ="Centroids",title.position = c('left', 'top'))
coord <-st_centroid(st_geometry(data_spatiale))
data_spatiale.nb <- poly2nb(data_spatiale,queen = TRUE)
summary(data_spatiale.nb)
cardinality <- card(data_spatiale.nb)
isolated_features <- which(cardinality == 0)
isolated_regions <- rownames(data_spatiale)[isolated_features]
data_spatiale <- data_spatiale[!(rownames(data_spatiale) %in% isolated_regions), ]
coord <-st_centroid(st_geometry(data_spatiale))
data_spatiale.nb <- poly2nb(data_spatiale,queen=T)
tmap_mode("plot")
tm_shape(World)+tm_polygons(col="white", border.col = "grey25")+
tm_graticules(lines = FALSE)+
tm_shape(st_centroid(World))+tm_dots(size = .4,col="red")+
tm_shape(nb2lines(data_spatiale.nb, coords=coord))+tm_lines(col="black", lwd=0.3)+
tm_layout(title ="Voisins contigus (Queen)",title.position = c('left', 'top'),scale=0.5)
cont.w <-nb2listw(data_spatiale.nb,style="W",zero.policy = T)
summary(cont.w)
mapPPV2.knn<-knearneigh(coord,k=5)
head(mapPPV2.knn$nn)
mapPPV2.nb<- knn2nb(mapPPV2.knn)
PPV2.w<-nb2listw(mapPPV2.nb,style="W",zero.policy = T)
nb1 <- knn2nb(knearneigh(coord, k = 1))
dsts <- unlist(nbdists(nb1, coord))
nb500km <- dnearneigh(x = st_centroid(data_spatiale), d1 = 0, d2 = 500)
nb500km
dists <- nbdists(nb500km, coord)
ids <- lapply(dists, function(x){1/x})
nb500km.ids.w <- nb2listw(nb500km, glist = ids, style = "W",zero.policy = T)
ids2 <- lapply(dists, function(x){1/(x*x)})
nb500km.ids2.w <- nb2listw(nb500km, glist = ids2, style = "W",zero.policy = T)
x_prod_elec <- cbind(data_spatiale$Electricity_production)
wx_prod_elec <- lag.listw(cont.w,x_prod_elec) #spatial lag
par(mfrow=c(1,2),cex.main=0.7)
boxplot.matrix(x_prod_elec,main="Taux de prod_elecs")
boxplot.matrix(wx_prod_elec,main="Taux de prod_elecs SP")
lm_moran <- lm(wx_prod_elec~x_prod_elec)
summary(lm_moran)
morantest_prod_elecs_cont <- moran.test(data_spatiale$Electricity_production,cont.w,randomisation=FALSE,alternative="greater")
morantest_prod_elecs_cont
moran.plot(x=data_spatiale$Electricity_production,cont.w,xlab="Taux d'adolescents non scolarises en 2016",ylab="spatial lag du taux d'adolescents non scolarises",labels=as.character(data_spatiale$iso_a3))
morantest_prod_elecs_cont_cm <-moran.mc(data_spatiale$Electricity_production,cont.w,99,alternative="greater")
morantest_prod_elecs_cont_cm
locm <-localmoran(data_spatiale$Electricity_production, cont.w)
head(locm)
summary(locm)
data_spatiale$Electricity_prod_centree <- data_spatiale$Electricity_production-mean(data_spatiale$Electricity_production)
locmc <-localmoran(data_spatiale$Electricity_prod_centree, cont.w)
head(locmc)
summary(locmc)
moran.carte <- cbind(data_spatiale, locmc)
tm_shape(moran.carte) +
tm_fill(col = "Ii",
style = "quantile",
title = "Indice local de Moran sur donnees centrees")
quadrant <- vector(mode="numeric",length=nrow(locm))
var<- data_spatiale$Electricity_prod_centree
local<-locm[,1]-mean(locm[,1])
signif <- 0.1
quadrant[var>0 & local>0] <- 4
quadrant[var <0 & local<0] <- 1
quadrant[var <0 & local>0] <- 2
quadrant[var >0 & local<0] <- 3
quadrant[locm[,5]>signif] <- 0
table(quadrant)
brks <- c(0,1,2,3,4)
colors <- c("white","blue",rgb(0,0,1,alpha=0.4),rgb(1,0,0,alpha=0.4),"red")
plot(st_geometry(data_spatiale),border="lightgray",col=colors[findInterval(quadrant,brks,all.inside=FALSE)])
box()
legend("bottomleft", legend = c("insignificant","low-low","low-high","high-low","high-high"),
fill=colors,bty="n")
data_spatiale$life_exp <- na.spline(data_spatiale$life_exp)
equation <- Electricity_production ~ life_exp + Agricultural_land + Alternative_and_nuclear_energy + Armed_forces_personnel + CO2_emissions + GDP_per_capita + Population_density + Research_and_development_expenditure - 1
prod_elecs_OLS <- lm(equation, data = data_spatiale)
data_spatiale$ols_res<-resid(prod_elecs_OLS)
summary(prod_elecs_OLS)
data_spatiale$W_life_exp <- lag.listw(cont.w, data_spatiale$life_exp)
data_spatiale$W_Agricultural_land <- lag.listw(cont.w, data_spatiale$Agricultural_land)
data_spatiale$W_Alternative_and_nuclear_energy <- lag.listw(cont.w, data_spatiale$Alternative_and_nuclear_energy)
data_spatiale$W_Armed_forces_personnel <- lag.listw(cont.w, data_spatiale$Armed_forces_personnel)
data_spatiale$W_CO2_emissions <- lag.listw(cont.w, data_spatiale$CO2_emissions)
data_spatiale$W_GDP_per_capita <- lag.listw(cont.w, data_spatiale$GDP_per_capita)
data_spatiale$W_Population_density <- lag.listw(cont.w, data_spatiale$Population_density)
data_spatiale$W_Research_and_development_expenditure <- lag.listw(cont.w, data_spatiale$Research_and_development_expenditure)
prod_elecs_SLX = lm(Electricity_production~ life_exp+W_life_exp+Agricultural_land+W_Agricultural_land+Alternative_and_nuclear_energy+W_Alternative_and_nuclear_energy+Armed_forces_personnel+W_Armed_forces_personnel+CO2_emissions+W_CO2_emissions+Population_density+W_Population_density+Research_and_development_expenditure+W_Research_and_development_expenditure,
data=data_spatiale)
data_spatiale$slx_res<-resid(prod_elecs_SLX)
summary(prod_elecs_SLX)
library(spatialreg)
prod_elecs_SAR <- lagsarlm(formula = equation, listw = cont.w, data = data_spatiale)
data_spatiale$sar_res<-resid(prod_elecs_SAR)
summary(prod_elecs_SAR)
prod_elecs_SEM = errorsarlm(formula = equation, listw=cont.w,  data=data_spatiale)
data_spatiale$sem_res <- resid(prod_elecs_SEM)
summary(prod_elecs_SEM)
prod_elecs_SDM <- lagsarlm(formula = equation, listw = cont.w, type = "mixed", data = data_spatiale)
data_spatiale$sdm_res <- resid(prod_elecs_SDM)
summary(prod_elecs_SDM)
data_spatiale$sdm_res<-resid(prod_elecs_SDM)
#Maps
tm_shape(data_spatiale) +tm_text(text = "iso_a3",size=0.4)+
tm_polygons("sdm_res", alpha=0.5,palette="-RdYlBu",
style="pretty", id="POLYID",
title="Residus SDM")
data_spatiale %>%
st_drop_geometry() %>%
pivot_longer(cols = c('slx_res','sar_res','sem_res','sdm_res'), names_to = "Model") %>%
ggplot() +
geom_density(mapping = aes(x = value,
color = Model, fill = Model),
size = 0.5) +
geom_density(mapping = aes(x = ols_res),
color = "gray20", size = 0.5) +
scale_fill_manual(values = alpha(brewer.pal(n = 4, name = "Dark2"), 0.8)) +
scale_color_manual(values = alpha(brewer.pal(n = 4, name = "Dark2"), 1)) +
guides(color = "none", fill = "none") +
labs(x = "Residus", y = "Densite",
title = "Densite des residus SAR, SDM, SEM et SLX",
subtitle = "Distribution des residus MCO") +
facet_wrap(~ Model, nrow = 1)
sdm_vs_sar <- LR.Sarlm(prod_elecs_SDM,prod_elecs_SAR)
sdm_vs_sar
sar_vs_ols <- LR.Sarlm(prod_elecs_SAR,prod_elecs_OLS)
sar_vs_ols
sdm_vs_slx <- LR.Sarlm(prod_elecs_SDM, prod_elecs_SLX)
sdm_vs_slx
slx_vs_ols<-LR.Sarlm(prod_elecs_SLX,prod_elecs_OLS)
slx_vs_ols
sdm_vs_sem <-LR.Sarlm(prod_elecs_SDM,prod_elecs_SEM)
sdm_vs_sem
sem_vs_ols<-LR.Sarlm(prod_elecs_SEM,prod_elecs_OLS)
sem_vs_ols
AICs<-c(AIC(prod_elecs_OLS),AIC(prod_elecs_SLX),AIC(prod_elecs_SAR), AIC(prod_elecs_SEM), AIC(prod_elecs_SDM))
plot(AICs, type="h", lwd=1.5, xaxt="n", xlab="")
axis(1, at=1:5,labels=F) #5= number of models
labels<-c("OLS", "SLX","SAR", "SEM","SDM")
text(1:5, par("usr")[3]-.25, srt=45, adj=1, labels=labels, xpd=T)
mtext(side=1, text="Model Specification", line=3)
symbols(x= which.min(AICs), y=AICs[which.min(AICs)],inches = FALSE, circles=0.2, fg=2,lwd=2,add=T)
BICs<-c(BIC(prod_elecs_OLS),BIC(prod_elecs_SLX),BIC(prod_elecs_SAR), BIC(prod_elecs_SEM), BIC(prod_elecs_SDM))
plot(BICs, type="h", lwd=1.5, xaxt="n", xlab="")
axis(1, at=1:5,labels=F) #5= number of models
labels<-c("OLS", "SLX","SAR", "SEM","SDM")
text(1:5, par("usr")[3]-.25, srt=45, adj=1, labels=labels, xpd=T)
mtext(side=1, text="Model Specification", line=3)
symbols(x= which.min(BICs), y=BICs[which.min(BICs)],inches = FALSE, circles=0.2, fg=2,lwd=2,add=T)
lm.LMtests(prod_elecs_OLS,listw = cont.w,test="LMerr")
lm.LMtests(prod_elecs_OLS,listw = cont.w,test="LMlag")
lm.LMtests(prod_elecs_OLS,listw = cont.w,test="RLMlag")
sdm_vs_sar<-LR.Sarlm(prod_elecs_SDM,prod_elecs_SAR)
sdm_vs_sar
par(mfrow=c(1,4),cex.main=0.7)
boxplot(data$CO2_emissions,  main ="Emissions de CO2" ,col = c( "blue") )
boxplot(data$GDP_per_capita, main ="PIB/hbts" ,col = c( "blue") )
boxplot(data$Armed_forces_personnel,main ="Armee" ,col = c( "blue"))
boxplot(data$High_technology_exports,main ="Export tech" ,col = c( "blue"))
boxplot(data$Research_and_development_expenditure,main ="Recherche et Dev" ,col = c( "blue"))
boxplot(data$Trade,main ="Echange" ,col = c( "blue"))
par(mfrow=c(2,3),cex.main=0.7)
boxplot(data$CO2_emissions,  main ="Emissions de CO2" ,col = c( "blue") )
boxplot(data$GDP_per_capita, main ="PIB/hbts" ,col = c( "blue") )
boxplot(data$Armed_forces_personnel,main ="Armee" ,col = c( "blue"))
boxplot(data$High_technology_exports,main ="Export tech" ,col = c( "blue"))
boxplot(data$Research_and_development_expenditure,main ="Recherche et Dev" ,col = c( "blue"))
boxplot(data$Trade,main ="Echange" ,col = c( "blue"))
par(mfrow=c(2,3),cex.main=0.7)
boxplot(data$CO2_emissions,  main ="Emissions de CO2" ,col = c( "blue") )
boxplot(data$GDP_per_capita, main ="PIB/hbts" ,col = c( "blue") )
boxplot(data$Armed_forces_personnel,main ="Armee" ,col = c( "blue"))
boxplot(data$High_technology_exports,main ="Export tech" ,col = c( "blue"))
boxplot(data$Research_and_development_expenditure,main ="Recherche et Dev" ,col = c( "blue"))
boxplot(data$Trade,main ="Echange" ,col = c( "blue"))
# Corrélogramme
library(GGally)
ggcorr(data[4:16], method = c("everything", "pearson"),high = "#F21A00",mid = "#EEEEEE",low = "#3B9AB2", hjust=0.8, nbreaks = 8, label = TRUE, label_round = 1)
# Corrélogramme
library(GGally)
ggcorr(data[4:16], method = c("everything", "pearson"),high = "#F21A00",mid = "#EEEEEE",low = "#3B9AB2", hjust=0.8, nbreaks = 8, label = TRUE, label_round = 1)
# Corrélogramme
library(GGally)
ggcorr(data[4:16], method = c("everything", "pearson"),high = "#F21A00",mid = "#EEEEEE",low = "#3B9AB2", hjust=0.8, nbreaks = 8, label = TRUE, label_round = 1)
# Corrélogramme
library(GGally)
ggcorr(data[4:16], method = c("everything", "pearson"),high = "#F21A00",mid = "#EEEEEE",low = "#3B9AB2", hjust=0.8, nbreaks = 8, label = TRUE, label_round = 1)
# Corrélogramme
library(GGally)
ggcorr(data[4:16], method = c("everything", "pearson"),high = "#F21A00",mid = "#EEEEEE",low = "#3B9AB2", hjust=0.5, nbreaks = 8, label = TRUE, label_round = 1)
# Corrélogramme
library(GGally)
ggcorr(data[4:16], method = c("everything", "pearson"),high = "#F21A00",mid = "#EEEEEE",low = "#3B9AB2", hjust=0.8, nbreaks = 8, label = TRUE, label_round = 1)
